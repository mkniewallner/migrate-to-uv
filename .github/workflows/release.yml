name: Release

on:
  release:
    types: [published]
  workflow_dispatch:

env:
  PYTHON_VERSION: '3.13'
  # renovate: datasource=pypi depName=uv
  UV_VERSION: '0.9.7'

permissions: {}

jobs:
  linux:
    runs-on: ubuntu-24.04
    strategy:
      matrix:
        target: [x86_64, aarch64]
        manylinux: [auto, musllinux_1_1]
    steps:
      - uses: actions/checkout@08c6903cd8c0fde910a37f88322edcfb5dd907a8 # v5
        with:
          persist-credentials: false

      - name: Build wheels
        uses: PyO3/maturin-action@86b9d133d34bc1b40018696f782949dac11bd380 # v1
        with:
          target: ${{ matrix.target }}
          manylinux: ${{ matrix.manylinux }}
          args: --release --out dist

      - name: Upload wheels
        uses: actions/upload-artifact@330a01c490aca151604b8cf639adc76d48f6c5d4 # v5
        with:
          name: wheels-linux-${{ matrix.target }}-${{ matrix.manylinux }}
          path: dist

  windows:
    runs-on: windows-2025
    strategy:
      matrix:
        target: [x64, aarch64]
    steps:
      - uses: actions/checkout@08c6903cd8c0fde910a37f88322edcfb5dd907a8 # v5
        with:
          persist-credentials: false

      - name: Build wheels
        uses: PyO3/maturin-action@86b9d133d34bc1b40018696f782949dac11bd380 # v1
        with:
          target: ${{ matrix.target }}
          args: --release --out dist

      - name: Upload wheels
        uses: actions/upload-artifact@330a01c490aca151604b8cf639adc76d48f6c5d4 # v5
        with:
          name: wheels-windows-${{ matrix.target }}
          path: dist

  macos:
    runs-on: macos-15
    strategy:
      matrix:
        target: [x86_64, aarch64]
    steps:
      - uses: actions/checkout@08c6903cd8c0fde910a37f88322edcfb5dd907a8 # v5
        with:
          persist-credentials: false

      - name: Build wheels
        uses: PyO3/maturin-action@86b9d133d34bc1b40018696f782949dac11bd380 # v1
        with:
          target: ${{ matrix.target }}
          args: --release --out dist

      - name: Upload wheels
        uses: actions/upload-artifact@330a01c490aca151604b8cf639adc76d48f6c5d4 # v5
        with:
          name: wheels-macos-${{ matrix.target }}
          path: dist

  sdist:
    runs-on: ubuntu-24.04
    steps:
      - uses: actions/checkout@08c6903cd8c0fde910a37f88322edcfb5dd907a8 # v5
        with:
          persist-credentials: false

      - name: Build sdist
        uses: PyO3/maturin-action@86b9d133d34bc1b40018696f782949dac11bd380 # v1
        with:
          command: sdist
          args: --out dist

      - name: Upload sdist
        uses: actions/upload-artifact@330a01c490aca151604b8cf639adc76d48f6c5d4 # v5
        with:
          name: wheels-sdist
          path: dist

  publish:
    name: Publish
    runs-on: ubuntu-24.04
    needs: [linux, windows, macos, sdist]
    environment: pypi
    permissions:
      id-token: write
      contents: write
      attestations: write
    if: ${{ github.event_name == 'release' }}
    steps:
      - uses: actions/download-artifact@018cc2cf5baa6db3ef3c5f8a56943fffe632ef53 # v6

      - name: Generate artifact attestation
        uses: actions/attest-build-provenance@977bb373ede98d70efdf65b84cb5f73e068dcc2a # v3
        with:
          subject-path: 'wheels-*/*'

      - name: Publish to PyPI
        uses: PyO3/maturin-action@86b9d133d34bc1b40018696f782949dac11bd380 # v1
        with:
          command: upload
          args: --non-interactive --skip-existing wheels-*/*

  publish-docs:
    runs-on: ubuntu-24.04
    needs: publish
    permissions:
      contents: write
    if: ${{ github.event_name == 'release' }}
    steps:
      - uses: actions/checkout@08c6903cd8c0fde910a37f88322edcfb5dd907a8 # v5  # zizmor: ignore[artipacked] Required for publishing documentation to `gh-pages` branch.

      - name: Install uv
        uses: astral-sh/setup-uv@85856786d1ce8acfbcc2f13a5f3fbd6b938f9f41 # v7
        with:
          version: ${{ env.UV_VERSION }}

      - name: Install Python
        uses: actions/setup-python@e797f83bcb11b83ae66e0230d6156d7c80228e7c # v6
        with:
          python-version: ${{ env.PYTHON_VERSION }}

      - name: Deploy documentation
        run: uv run --only-group docs mkdocs gh-deploy --force
